name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # או master אם זה השם של ה-branch שלך
  workflow_dispatch:

permissions:
  contents: read  # רק קריאה - לא נעדכן את הקוד
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build with Airtable Token
        env:
          AIRTABLE_TOKEN: ${{ secrets.AIRTABLE_TOKEN }}
        run: |
          echo "🔒 Replacing token placeholder with secret (not committing to repo)..."
          
          # בודק אם הטוקן קיים
          if [ -z "$AIRTABLE_TOKEN" ]; then
            echo "❌ ERROR: AIRTABLE_TOKEN secret is not set!"
            echo "💡 Please go to Settings → Secrets → Actions and add AIRTABLE_TOKEN"
            exit 1
          fi
          
          # בודק שהטוקן לא ריק
          if [ "${#AIRTABLE_TOKEN}" -lt 10 ]; then
            echo "❌ ERROR: AIRTABLE_TOKEN seems too short (${#AIRTABLE_TOKEN} chars)"
            exit 1
          fi
          
          echo "✅ Token exists (length: ${#AIRTABLE_TOKEN} characters)"
          echo "✅ Token starts with: ${AIRTABLE_TOKEN:0:7}..."
          
          # מחליף את ה-placeholder בטוקן באמצעות Python (יותר אמין מ-sed)
          python3 << 'PYEOF'
          import os
          
          token = os.environ.get('AIRTABLE_TOKEN', '')
          if not token:
              print("❌ ERROR: AIRTABLE_TOKEN not found in environment!")
              exit(1)
          
          # קורא את הקובץ
          with open('align.html', 'r', encoding='utf-8') as f:
              content = f.read()
          
          # מחליף את ה-placeholder
          old_token = "'{{AIRTABLE_TOKEN}}'"
          new_token = f"'{token}'"
          
          if old_token not in content:
              print("⚠️ WARNING: Token placeholder not found in file!")
              print(f"Looking for: {old_token}")
              exit(1)
          
          content = content.replace(old_token, new_token)
          
          # שומר את הקובץ
          with open('align.html', 'w', encoding='utf-8') as f:
              f.write(content)
          
          print("✅ Token replaced successfully")
          
          # מוודא שההחלפה הצליחה
          if '{{AIRTABLE_TOKEN}}' in content:
              print("❌ ERROR: Placeholder still exists after replacement!")
              exit(1)
          PYEOF
          
          echo "Verifying replacement..."
          if grep -q "{{AIRTABLE_TOKEN}}" align.html; then
            echo "❌ CRITICAL ERROR: Placeholder still in file after replacement!"
            echo "First 200 chars of TOKEN line:"
            grep "TOKEN:" align.html | head -c 200
            exit 1
          fi
          
          echo "✅ Verification passed - placeholder replaced"
          echo "Token line (first 100 chars, token masked):"
          grep "TOKEN:" align.html | head -1 | sed 's/\([a-zA-Z0-9]\{20\}\)[a-zA-Z0-9]*/\1***/g' || echo "Line not found"
          
      - name: Verify artifact before upload
        run: |
          echo "🔍 Verifying align.html before upload..."
          if grep -q "{{AIRTABLE_TOKEN}}" align.html; then
            echo "❌ ERROR: Placeholder found in artifact!"
            exit 1
          fi
          echo "✅ Artifact verified - no placeholder found"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Final verification before upload
        run: |
          echo "🔍 Final check of align.html content..."
          echo "File size: $(wc -c < align.html) bytes"
          echo "Checking if placeholder exists:"
          if grep -q "{{AIRTABLE_TOKEN}}" align.html; then
            echo "❌ CRITICAL: Placeholder still exists!"
            exit 1
          fi
          echo "Checking if token was replaced (should see 'pat' in token line):"
          if grep -q "TOKEN: 'pat" align.html; then
            echo "✅ Token replacement confirmed - file contains actual token"
          else
            echo "⚠️ WARNING: Token line doesn't start with 'pat' as expected"
            grep "TOKEN:" align.html | head -1 || echo "TOKEN line not found"
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

